{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marc-Arthur\\\\Desktop\\\\mon-projet-phase-2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Movies from './pages/Movies';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:4000';\nfunction App() {\n  _s();\n  let add_like_ = false;\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        const res = await fetch(`${API_URL}/movies`);\n        if (!res.ok) throw new Error('Failed to fetch movies');\n        const data = await res.json();\n        setMovies(data);\n        setError(null);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchMovies();\n  }, []);\n  async function addLike(id) {\n    const movieToUpdate = movies.find(movie => movie.id === id);\n    if (!movieToUpdate) return;\n    let updatedLikes = movieToUpdate.likes;\n    if (!add_like_) {\n      updatedLikes = movieToUpdate.likes + 1;\n      add_like_ = true;\n    } else {\n      updatedLikes = movieToUpdate.likes - 1;\n      add_like_ = false;\n    }\n    try {\n      const res = await fetch(`${API_URL}/movies/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          likes: updatedLikes\n        })\n      });\n      const updatedMovie = await res.json();\n      setMovies(prev => prev.map(movie => movie.id === id ? updatedMovie : movie));\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  async function removeLike(id) {\n    const movieToUpdate = movies.find(movie => movie.id === id);\n    if (!movieToUpdate) return;\n    const updatedLikes = movieToUpdate.likes > 0 ? movieToUpdate.likes - 1 : 0;\n    try {\n      const res = await fetch(`${API_URL}/movies/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          likes: updatedLikes\n        })\n      });\n      const updatedMovie = await res.json();\n      setMovies(prev => prev.map(movie => movie.id === id ? updatedMovie : movie));\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  async function deleteMovie(id) {\n    try {\n      const res = await fetch(`${API_URL}/movies/${id}`, {\n        method: 'DELETE'\n      });\n      if (!res.ok) throw new Error('Failed to delete movie');\n      setMovies(prev => prev.filter(movie => movie.id !== id));\n    } catch (err) {\n      alert(err.message);\n    }\n  }\n  function addMovie(newMovie) {\n    setMovies(prev => [...prev, newMovie]);\n  }\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading movies...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        padding: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movies\",\n          element: /*#__PURE__*/_jsxDEV(Movies, {\n            movies: movies,\n            addLike: addLike,\n            removeLike: removeLike,\n            deleteMovie: deleteMovie,\n            addMovie: addMovie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {\n            movies: movies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"6wevkd2F3PCn4cJR5qV0d4ozTn8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Routes","Route","Navbar","Movies","Home","About","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","App","_s","add_like_","movies","setMovies","loading","setLoading","error","setError","fetchMovies","res","fetch","ok","Error","data","json","err","message","addLike","id","movieToUpdate","find","movie","updatedLikes","likes","method","headers","body","JSON","stringify","updatedMovie","prev","map","console","removeLike","deleteMovie","filter","alert","addMovie","newMovie","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Marc-Arthur/Desktop/mon-projet-phase-2/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nimport Navbar from './components/Navbar';\r\nimport Movies from './pages/Movies';\r\nimport Home from './pages/Home';\r\nimport About from './pages/About';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:4000';\r\n\r\nfunction App() {\r\n  let add_like_ = false;\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchMovies() {\r\n      try {\r\n        const res = await fetch(`${API_URL}/movies`);\r\n        if (!res.ok) throw new Error('Failed to fetch movies');\r\n        const data = await res.json();\r\n        setMovies(data);\r\n        setError(null);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  async function addLike(id) {\r\n    const movieToUpdate = movies.find(movie => movie.id === id);\r\n    if (!movieToUpdate) return;\r\n    let updatedLikes=movieToUpdate.likes;\r\n\r\n    if (!add_like_){\r\n        updatedLikes = movieToUpdate.likes + 1;\r\n        add_like_ = true;\r\n    } else {\r\n         updatedLikes = movieToUpdate.likes - 1;\r\n         add_like_ = false;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(`${API_URL}/movies/${id}`, {\r\n        method: 'PATCH',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ likes: updatedLikes }),\r\n      });\r\n      const updatedMovie = await res.json();\r\n      setMovies(prev => prev.map(movie => (movie.id === id ? updatedMovie : movie)));\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  async function removeLike(id) {\r\n    const movieToUpdate = movies.find(movie => movie.id === id);\r\n    if (!movieToUpdate) return;\r\n\r\n    const updatedLikes = movieToUpdate.likes > 0 ? movieToUpdate.likes - 1 : 0;\r\n\r\n    try {\r\n      const res = await fetch(`${API_URL}/movies/${id}`, {\r\n        method: 'PATCH',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ likes: updatedLikes }),\r\n      });\r\n      const updatedMovie = await res.json();\r\n      setMovies(prev => prev.map(movie => (movie.id === id ? updatedMovie : movie)));\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  async function deleteMovie(id) {\r\n    try {\r\n      const res = await fetch(`${API_URL}/movies/${id}`, { method: 'DELETE' });\r\n      if (!res.ok) throw new Error('Failed to delete movie');\r\n      setMovies(prev => prev.filter(movie => movie.id !== id));\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  }\r\n\r\n  function addMovie(newMovie) {\r\n    setMovies(prev => [...prev, newMovie]);\r\n  }\r\n\r\n  if (loading) return <p>Loading movies...</p>;\r\n  if (error) return <p>Error: {error}</p>;\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <main style={{ padding: '20px' }}>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route\r\n            path=\"/movies\"\r\n            element={\r\n              <Movies\r\n                movies={movies}\r\n                addLike={addLike}\r\n                removeLike={removeLike}\r\n                deleteMovie={deleteMovie}\r\n                addMovie={addMovie}\r\n              />\r\n            }\r\n          />\r\n          <Route path=\"/about\" element={<About movies={movies} />} />\r\n        </Routes>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}