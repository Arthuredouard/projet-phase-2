{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Routes,Route}from'react-router-dom';import Navbar from'./components/Navbar';import Home from'./pages/Home';import Movies from'./pages/Movies';import About from'./pages/About';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[movies,setMovies]=useState([]);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const API_URL=process.env.REACT_APP_API_URL||'http://localhost:3001';useEffect(()=>{fetch(`${API_URL}/movies`).then(res=>{if(!res.ok)throw new Error('Error by downloading movie');return res.json();}).then(data=>{setMovies(data);setIsLoading(false);}).catch(err=>{setError(err.message);setIsLoading(false);});},[API_URL]);function addMovie(newMovie){setMovies([...movies,newMovie]);}function deleteMovie(id){if(window.confirm(\"Do you want this movie?\")){fetch(`${API_URL}/movies/${id}`,{method:'DELETE'}).then(()=>{setMovies(movies.filter(movie=>movie.id!==id));});}}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),isLoading?/*#__PURE__*/_jsx(\"p\",{children:\"Download movie...\"}):/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/movies\",element:/*#__PURE__*/_jsx(Movies,{movies:movies,addMovie:addMovie,deleteMovie:deleteMovie})}),/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{})})]})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","Routes","Route","Navbar","Home","Movies","About","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","movies","setMovies","isLoading","setIsLoading","error","setError","API_URL","process","env","REACT_APP_API_URL","fetch","then","res","ok","Error","json","data","catch","err","message","addMovie","newMovie","deleteMovie","id","window","confirm","method","filter","movie","children","style","color","path","element"],"sources":["C:/Users/Marc-Arthur/Desktop/projet-phase-2/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport Home from './pages/Home';\r\nimport Movies from './pages/Movies';\r\nimport About from './pages/About';\r\n\r\nfunction App() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\r\n\r\n  useEffect(() => {\r\n    fetch(`${API_URL}/movies`)\r\n      .then(res => {\r\n        if (!res.ok) throw new Error('Error by downloading movie');\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setMovies(data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch(err => {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n      });\r\n  }, [API_URL]);\r\n\r\n  function addMovie(newMovie) {\r\n    setMovies([...movies, newMovie]);\r\n  }\r\n\r\n  function deleteMovie(id) {\r\n    if (window.confirm(\"Do you want this movie?\")) {\r\n      fetch(`${API_URL}/movies/${id}`, { method: 'DELETE' })\r\n        .then(() => {\r\n          setMovies(movies.filter(movie => movie.id !== id));\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      {isLoading ? <p>Download movie...</p> : (\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/movies\" element={<Movies movies={movies} addMovie={addMovie} deleteMovie={deleteMovie} />} />\r\n          <Route path=\"/about\" element={<About />} />\r\n        </Routes>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}